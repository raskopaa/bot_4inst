from telegram import ReplyKeyboardMarkup
from telegram.ext import MessageHandler, filters, ConversationHandler
import logging
from handlers.start import start
from handlers.rasp import ask_rasp_question, rasp_buttons, send_rasp_schedule
from handlers.science import ask_science_question, science_buttons, send_sci_schedule
from handlers.diploma import  ask_diploma_question, dip_buttons, send_dip_schedule
from handlers.stipendia import ask_stip_question, stip_buttons, send_stip_schedule
from handlers.champion import  ask_champ_question, champ_buttons, send_champ_schedule
from handlers.napr import  ask_napr_question, napr_buttons, send_napr_schedule
from handlers.abi import ask_abi_question, abi_buttons, send_abi_schedule
logger = logging.getLogger(__name__)

ADMINS = {
    "üñ•Ô∏è –ö–∞—Ñ–µ–¥—Ä–∞ 41": 242648429,
    "üåê –ö–∞—Ñ–µ–¥—Ä–∞ 42": 242648429,
    "üë®‚Äçüíª –ö–∞—Ñ–µ–¥—Ä–∞ 43": 242648429,
    "üìä –ö–∞—Ñ–µ–¥—Ä–∞ 44": 242648429,
    "‚≠êÔ∏è –î–µ–∫–∞–Ω–∞—Ç ‚≠êÔ∏è": 242648429,
}

SELECT_DEPARTMENT, ASK_QUESTION = range(2)


async def ask_department_question(update, context):
    context.user_data.clear()
    departments = [d for d in ADMINS.keys()]
    keyboard = [departments[i:i + 2] for i in range(0, len(departments), 2)]
    keyboard.append(["‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ñ–µ–¥—Ä—É:", reply_markup=reply_markup)
    return SELECT_DEPARTMENT
DEPARTMENT_INFO = {
    "üñ•Ô∏è –ö–∞—Ñ–µ–¥—Ä–∞ 41": "–ö–∞—Ñ–µ–¥—Ä–∞ 41\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: (812) 494-70-41\nüìß Email:  dept41@guap.ru\nüë§ –ó–∞–≤. –∫–∞—Ñ–µ–¥—Ä–æ–π: –ö–æ—Ä–∂–∞–≤–∏–Ω –ì–µ–æ—Ä–≥–∏–π –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á",
    "üåê –ö–∞—Ñ–µ–¥—Ä–∞ 42": "–ö–∞—Ñ–µ–¥—Ä–∞ 42\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: (812) 494-70-53\nüìß Email: kaf42@guap.ru\nüë§ –ó–∞–≤. –∫–∞—Ñ–µ–¥—Ä–æ–π: –ú–∏—á—É—Ä–∏–Ω –°–µ—Ä–≥–µ–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
    "üë®‚Äçüíª –ö–∞—Ñ–µ–¥—Ä–∞ 43": "–ö–∞—Ñ–µ–¥—Ä–∞ 43\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: (812) 494-70-43\nüìß Email:  k43@guap.ru\nüë§ –ó–∞–≤. –∫–∞—Ñ–µ–¥—Ä–æ–π: –û—Ö—Ç–∏–ª–µ–≤ –ú–∏—Ö–∞–∏–ª –Æ—Ä—å–µ–≤–∏—á",
    "üìä –ö–∞—Ñ–µ–¥—Ä–∞ 44": "–ö–∞—Ñ–µ–¥—Ä–∞ 44\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: (812) 494-70-44\nüìß Email: kaf44@guap.ru\nüë§ –ó–∞–≤. –∫–∞—Ñ–µ–¥—Ä–æ–π: –°–µ—Ä–≥–µ–µ–≤ –ú–∏—Ö–∞–∏–ª –ë–æ—Ä–∏—Å–æ–≤–∏—á",
    "‚≠êÔ∏è –î–µ–∫–∞–Ω–∞—Ç ‚≠êÔ∏è": "‚≠êÔ∏è –î–µ–∫–∞–Ω–∞—Ç ‚≠êÔ∏è\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: (812) 494-70-40; (812) 312-24-14\nüìß Email: dek4@guap.ru\nüë§ –î–∏—Ä–µ–∫—Ç–æ—Ä –ò–Ω—Å—Ç–∏—Ç—É—Ç–∞: –¢–∞—Ç–∞—Ä–Ω–∏–∫–æ–≤–∞ –¢–∞—Ç—å—è–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞\n"
                     "üìû –¢–µ–ª–µ—Ñ–æ–Ω –¥–µ–∫–∞–Ω–∞—Ç–∞ –º–ª–∞–¥—à–∏—Ö –∫—É—Ä—Å–æ–≤: (812) 708-39-43\nüìß Email –¥–µ–∫–∞–Ω–∞—Ç–∞ –º–ª–∞–¥—à–∏—Ö –∫—É—Ä—Å–æ–≤: dek4gast@guap.ru"
}

async def select_department(update, context):
    text = update.message.text


    if text == "‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        context.user_data.clear()
        await show_main_menu(update, context)
        return ConversationHandler.END

    if text not in ADMINS:
        await update.message.reply_text("–ù–µ –ø–æ–Ω–∏–º–∞—é, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å. üò¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return SELECT_DEPARTMENT

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ñ–µ–¥—Ä–µ
    info = DEPARTMENT_INFO.get(text, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ñ–µ–¥—Ä–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    keyboard = [["‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True)
    await update.message.reply_text(info, reply_markup=reply_markup)

    return SELECT_DEPARTMENT

async def show_main_menu(update, context):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏."""
    keyboard = [
        ["üïî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–æ–≤"],
        ["üî¨ –ù–∞—É–∫–∞", "üéì –î–∏–ø–ª–æ–º—ã –∏ –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏–∏"],
        ["üíµ –°—Ç–∏–ø–µ–Ω–¥–∏–∏ –∏ –≥—Ä–∞–Ω—Ç—ã", "üèÜ –ß–µ–º–ø–∏–æ–Ω–∞—Ç—ã –∏ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏"],
        ["‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True)
    await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_markup)

async def show_ABI_menu(update, context):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏."""
        keyboard = [
            ["üìö –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è", "üìù –û–±—â–µ–∂–∏—Ç–∏—è"],
            ["üìÖ –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã", "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏"],
            ["üßë‚Äçüíª –£–∑–Ω–∞–π —Å–≤–æ—é –ò–¢-—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é"]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True)
        await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_markup)

# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ConversationHandler –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞
def get_department_handlers():
    return ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å$"), ask_department_question)],
        states={
            SELECT_DEPARTMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_department)],
            ASK_QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_question)],
        },
        fallbacks=[MessageHandler(filters.Regex("^‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$"), lambda update, context: ConversationHandler.END)],
    allow_reentry = True  # –†–∞–∑—Ä–µ—à–∞–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–∏–∞–ª–æ–≥–∞
    )

# –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def handle_admin_reply(update, context):
    text = update.message.text  # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if text == "‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await show_main_menu(update, context)  # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ start –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        return

    if text == "‚¨ÖÔ∏è –ú–µ–Ω—é":
        await show_ABI_menu(update, context)  # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ start –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        return


    # –ï—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–∂–∞–ª "üïî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–æ–≤"
    if text == "üïî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–æ–≤":
        await ask_rasp_question(update, context)  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–¥–µ–ª–∞
        return
    if text == "üî¨ –ù–∞—É–∫–∞":
        await ask_science_question(update, context)  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–¥–µ–ª–∞
        return

    if text == "üéì –î–∏–ø–ª–æ–º—ã –∏ –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏–∏":
        await ask_diploma_question(update, context)  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–¥–µ–ª–∞
        return

    if text == "üíµ –°—Ç–∏–ø–µ–Ω–¥–∏–∏ –∏ –≥—Ä–∞–Ω—Ç—ã":
        await ask_stip_question(update, context)  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–¥–µ–ª–∞
        return
    if text == "üèÜ –ß–µ–º–ø–∏–æ–Ω–∞—Ç—ã –∏ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏":
        await ask_champ_question(update, context)  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–¥–µ–ª–∞
        return
    if text == "üìö –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è":
        await ask_napr_question(update, context)  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–¥–µ–ª–∞
        return
    if text in champ_buttons:
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        await send_champ_schedule(update, context)

    if text in stip_buttons:
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        await send_stip_schedule(update, context)
    if text in abi_buttons:
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        await send_abi_schedule(update, context)
    if text in rasp_buttons:
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        await send_rasp_schedule(update, context)
    # –ï—Å–ª–∏ —ç—Ç–æ –≤—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –∏–∑ –æ—Ç–¥–µ–ª–æ–≤, –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    if text in dip_buttons:
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        await send_dip_schedule(update, context)
        return
    if text in science_buttons:
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        await send_sci_schedule(update, context)
        return
    if text in napr_buttons:
        await send_napr_schedule(update, context)
        return


    # –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if update.message.reply_to_message:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º
        original_message = update.message.reply_to_message.text
        if "–í–æ–ø—Ä–æ—Å –æ—Ç" in original_message:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            user_info = original_message.split("\n\n")[0]
            user_id = int(user_info.split("(")[1].split(")")[0])  # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            try:
                await context.bot.send_message(
                    chat_id=user_id,
                    text=f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{update.message.text}"
                )
                await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")
                await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def get_admin_reply_handler():
    return MessageHandler(filters.TEXT & ~filters.COMMAND, handle_admin_reply)


def get_department_handlers():
    return ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å$"), ask_department_question)],
        states={
            SELECT_DEPARTMENT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, select_department)
            ],
        },
        fallbacks=[
            MessageHandler(filters.Regex("^‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$"), lambda update, context: show_main_menu(update, context)),
        ],
        allow_reentry=True
    )
